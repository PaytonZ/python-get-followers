'''
Initializer for autogenerated GUItest.property

v0.8 -- 10/07/2014 - GUI with listeners
'''

from GuiGenerated import Ui_MainWindow
from PySide import QtCore, QtGui
import sys


oldData = { 'twitter' : '',
		 	'facebook' : '',
		 	'linkedin' : '',
		 	'google' : '',
		 	'pinterest' : '',
		 	'youtube' : ''
		}

'''
CLIENT AREA LISTENERS
'''
def listenerClientName(textValue):
	if textValue != "":
		mySW.ui.saveBt.setEnabled(True)
		mySW.ui.pinterestText.setEnabled(True)
		mySW.ui.googleText.setEnabled(True)
		mySW.ui.facebookText.setEnabled(True)
		mySW.ui.linkedinText.setEnabled(True)
		mySW.ui.youtubeText.setEnabled(True)
		mySW.ui.twitterText.setEnabled(True)
		mySW.ui.clientNameText.setEnabled(True)
	else:
		mySW.ui.saveBt.setEnabled(False)
		mySW.ui.pinterestText.setEnabled(False)
		mySW.ui.googleText.setEnabled(False)
		mySW.ui.facebookText.setEnabled(False)
		mySW.ui.linkedinText.setEnabled(False)
		mySW.ui.youtubeText.setEnabled(False)
		mySW.ui.twitterText.setEnabled(False)
		mySW.ui.clientNameText.setEnabled(False)

def listenerSaveButton():

	print "saving..."

'''
SOCIAL AREA LISTENERS
'''
def listenerCheckBoxes():
	if mySW.ui.twitterCk.isChecked() or mySW.ui.googleCk.isChecked() or mySW.ui.facebookCk.isChecked() or mySW.ui.pinterestCk.isChecked() or mySW.ui.youtubeCk.isChecked() or mySW.ui.linkedinCk.isChecked():
		mySW.ui.removeBt.setEnabled(True)
	else:
		mySW.ui.removeBt.setEnabled(False)

def listenerRemoveAccounts():

	print "deleting..."

def listenerEditInfo():

	if mySW.ui.googleText_2.isEnabled() and mySW.ui.facebookText_2.isEnabled() and mySW.ui.pinterestText_2.isEnabled() and mySW.ui.youtubeText_2.isEnabled() and mySW.ui.twitterText_2.isEnabled() and mySW.ui.linkedinText_2.isEnabled():
		
		mySW.ui.editBt.setText('Edit info')

		mySW.ui.googleText_2.setEnabled(False)
		mySW.ui.facebookText_2.setEnabled(False)
		mySW.ui.pinterestText_2.setEnabled(False)
		mySW.ui.youtubeText_2.setEnabled(False)
		mySW.ui.twitterText_2.setEnabled(False)
		mySW.ui.linkedinText_2.setEnabled(False)

		for account in oldData.keys():
			print oldData[account]

		print 'saving....'
	else:
		mySW.ui.editBt.setText('Save edited info')

		mySW.ui.googleText_2.setEnabled(True)
		mySW.ui.facebookText_2.setEnabled(True)
		mySW.ui.pinterestText_2.setEnabled(True)
		mySW.ui.youtubeText_2.setEnabled(True)
		mySW.ui.twitterText_2.setEnabled(True)
		mySW.ui.linkedinText_2.setEnabled(True)

		oldData['twitter'] = mySW.ui.twitterText_2.text()
		oldData['facebook'] = mySW.ui.facebookText_2.text()
		oldData['linkedin'] = mySW.ui.linkedinText_2.text()
		oldData['google'] = mySW.ui.googleText_2.text()
		oldData['pinterest'] = mySW.ui.pinterestText_2.text()
		oldData['youtube'] = mySW.ui.youtubeText_2.text()


class ControlMainWindow(QtGui.QMainWindow):
	def __init__(self, parent=None):
		super(ControlMainWindow, self).__init__(parent)
		self.ui = Ui_MainWindow()
		self.ui.setupUi(self)

	def customSetUp(self):
		#Listener for Client name text field
		QtCore.QObject.connect(self.ui.clientNameText, QtCore.SIGNAL("textEdited(QString)"), listenerClientName)
		#Listener for save client and accounts button
		QtCore.QObject.connect(self.ui.saveBt, QtCore.SIGNAL("clicked()"), listenerSaveButton)
		#Listener for checkboxes
		QtCore.QObject.connect(self.ui.linkedinCk, QtCore.SIGNAL("clicked()"), listenerCheckBoxes)
		QtCore.QObject.connect(self.ui.twitterCk, QtCore.SIGNAL("clicked()"), listenerCheckBoxes)
		QtCore.QObject.connect(self.ui.facebookCk, QtCore.SIGNAL("clicked()"), listenerCheckBoxes)
		QtCore.QObject.connect(self.ui.youtubeCk, QtCore.SIGNAL("clicked()"), listenerCheckBoxes)
		QtCore.QObject.connect(self.ui.pinterestCk, QtCore.SIGNAL("clicked()"), listenerCheckBoxes)
		QtCore.QObject.connect(self.ui.googleCk, QtCore.SIGNAL("clicked()"), listenerCheckBoxes)
		#Listener for remove social account
		QtCore.QObject.connect(self.ui.removeBt, QtCore.SIGNAL("clicked()"), listenerRemoveAccounts)
		#Listener for edit social info accounts
		QtCore.QObject.connect(self.ui.editBt, QtCore.SIGNAL("clicked()"), listenerEditInfo)

if __name__ == '__main__':
	app = QtGui.QApplication(sys.argv)
	mySW = ControlMainWindow()
	mySW.customSetUp()
	mySW.show()
	sys.exit(app.exec_())